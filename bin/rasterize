#!/usr/bin/env node

var fs = require("fs"),
    d3_geo = require("d3-geo"),
    d3_queue = require("d3-queue"),
    shapefile = require("shapefile"),
    Canvas = require("canvas");

var file = fs.createWriteStream(process.argv[3]);

var scale = 2,
    width = 960 * scale,
    height = 600 * scale;

var canvas = new Canvas(width, height),
    context = canvas.getContext("2d");

context.fillStyle = "#000";
context.strokeStyle = "#000";
context.lineWidth = 0.5;
context.lineJoin = "round";

var projection = d3_geo.geoAlbers()
    .scale(1280 * scale)
    .translate([width / 2, height / 2])
    .precision(0.1);

var path = d3_geo.geoPath()
    .projection(projection)
    .context(context)
    .pointRadius(2.5);

var reader = shapefile.reader(process.argv[2], {"ignore-properties": true});

d3_queue.queue(1)
    .defer(reader.readHeader.bind(reader))
    .defer(readAllRecords)
    .defer(reader.close.bind(reader))
    .await(writeImage);

function readAllRecords(callback) {
  (function readRecord() {
    reader.readRecord(function(error, record) {
      if (error) return callback(error);
      if (record === shapefile.end) return callback(null);
      context.beginPath();
      path(record);
      if (/Point$/.test(record.geometry.type)) context.fill();
      else context.stroke();
      process.nextTick(readRecord);
    });
  })();
}

function writeImage(error) {
  if (error) throw error;
  canvas.pngStream().pipe(file);
}
